version: "3.8"

services:
  mysql:
    image: mysql:8.0
    container_name: mysql-petsocial
    restart: unless-stopped
    ports:
      - "3306:3306"
    environment:
      - "MYSQL_ROOT_PASSWORD=secret"
      - "MYSQL_DATABASE=pet-social"
    networks:
      - node-network

  jenkins:
    image: jenkins/jenkins:lts-jdk11
    container_name: jenkins-petsocial
    restart: on-failure
    ports:
      - "8080:8080"
    networks:
      - node-network

  es1:
    container_name: es1-petsocial
    image: docker.elastic.co/elasticsearch/elasticsearch:8.8.1
    environment:
      - cluster.name=elastic_search
      - node.name=es1
      - cluster.initial_master_nodes=es1,es2
      - discovery.seed_hosts=es2
      - ELASTIC_PASSWORD=Password
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=true
      - xpack.security.enrollment.enabled=true
      # HTTPS
      - xpack.security.http.ssl.enabled=true
      - xpack.security.http.ssl.key=/usr/share/elasticsearch/config/certificates/es1/es1.key
      - xpack.security.http.ssl.certificate=/usr/share/elasticsearch/config/certificates/es1/es1.crt
      - xpack.security.http.ssl.certificate_authorities=/usr/share/elasticsearch/config/certificates/ca/ca.crt
      # SSL
      - xpack.security.transport.ssl.enabled=true
      - xpack.security.transport.ssl.key=/usr/share/elasticsearch/config/certificates/es1/es1.key
      - xpack.security.transport.ssl.certificate=/usr/share/elasticsearch/config/certificates/es1/es1.crt
      - xpack.security.transport.ssl.certificate_authorities=/usr/share/elasticsearch/config/certificates/ca/ca.crt
      - xpack.security.transport.ssl.verification_mode=certificate
    volumes:
      - es_data_1:/usr/share/elastic_search/data
      - ./elastic/certs:/usr/share/elasticsearch/config/certificates
    ports:
      - "9200:9200"
    healthcheck:
      test: curl --cacert elastic:Password http://localhost:9200 >/dev/null; if [[ $$? == 52 ]]; then echo 0; else echo 1; fi
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - node-network

  es2:
    depends_on:
      es1:
        condition: service_started
    container_name: es2-petsocial
    image: docker.elastic.co/elasticsearch/elasticsearch:8.8.1
    environment:
      - cluster.name=elastic_search
      - node.name=es2
      - cluster.initial_master_nodes=es1,es2
      - discovery.seed_hosts=es1
      - ELASTIC_PASSWORD=Password
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=true
      - xpack.security.enrollment.enabled=true
      # HTTPS
      - xpack.security.http.ssl.enabled=true
      - xpack.security.http.ssl.key=/usr/share/elasticsearch/config/certificates/es2/es2.key
      - xpack.security.http.ssl.certificate=/usr/share/elasticsearch/config/certificates/es2/es2.crt
      - xpack.security.http.ssl.certificate_authorities=/usr/share/elasticsearch/config/certificates/ca/ca.crt
      # SSL
      - xpack.security.transport.ssl.enabled=true
      - xpack.security.transport.ssl.key=/usr/share/elasticsearch/config/certificates/es2/es2.key
      - xpack.security.transport.ssl.certificate=/usr/share/elasticsearch/config/certificates/es2/es2.crt
      - xpack.security.transport.ssl.certificate_authorities=/usr/share/elasticsearch/config/certificates/ca/ca.crt
      - xpack.security.transport.ssl.verification_mode=certificate
    volumes:
      - es_data_2:/usr/share/elastic_search/data
      - ./elastic/certs:/usr/share/elasticsearch/config/certificates
    ports:
      - "9201:9200"
    healthcheck:
      test: curl --cacert elastic:Password http://localhost:9201 >/dev/null; if [[ $$? == 52 ]]; then echo 0; else echo 1; fi
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - node-network

  kibana:
    depends_on:
      es1:
        condition: service_healthy
    image: docker.elastic.co/kibana/kibana:8.8.1
    container_name: kibana_petsocial
    environment:
      - ELASTICSEARCH_HOSTS=https://es1:9200
      - ELASTICSEARCH_USERNAME=kibana_system
      - ELASTICSEARCH_PASSWORD=1qNJu4XinRYExlt5LaNG
      - ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES=/usr/share/kibana/config/elastic/certs/ca/ca.crt
    volumes:
      - kibana_data:/usr/share/kibana/data
      - ./elastic/certs:/usr/share/kibana/config/elastic/certs
    ports:
      - "5601:5601"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s -I http://localhost:5601 | grep -q 'HTTP/1.1 302 Found'",
        ]
      interval: 10s
      timeout: 10s
      retries: 120
    networks:
      - node-network

  metricbeat:
    depends_on:
      es1:
        condition: service_healthy
    build:
      context: .
      dockerfile: Dockerfile.Metricbeat
    container_name: metricbeat-petsocial
    environment:
      - ELASTICSEARCH_HOST=["https://es1:9200","https://es2:9200"]
      - KIBANA_HOST=http://kibana:5601
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=Password
    volumes:
      - metricbeat_data:/usr/share/metricbeat/data
      - ./elastic/certs:/etc/elastic/certs
    networks:
      - node-network

  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: rabbitmq-petsocial
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - /var/lib/rabbitmq
    networks:
      - node-network

volumes:
  es_data_1:
    driver: local
  es_data_2:
    driver: local
  kibana_data:
    driver: local
  metricbeat_data:
    driver: local

networks:
  node-network:
    driver: bridge
